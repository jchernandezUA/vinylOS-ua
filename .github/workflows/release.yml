name: Release Automation
#cambio solo para probar
on:
  push:
    branches:
      - develop
    paths:
      - '**' # escucha cambios en el contenido de los archivos

jobs:
  create-release-branch-and-build-apk:
    if: "github.event.head_commit.message == 'Release *'"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version number
        id: extract_version
        run: echo "::set-output name=version::$(echo ${{ github.event.head_commit.message }} | grep -oP 'Release \K[0-9]+\.[0-9]+\.[0-9]+')"

      - name: Create release branch
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b release/${{ steps.extract_version.outputs.version }}
          git push origin release/${{ steps.extract_version.outputs.version }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
          files: app/build/outputs/apk/release/*.apk